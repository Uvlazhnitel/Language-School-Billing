// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AttendanceMonthsColumns holds the columns for the "attendance_months" table.
	AttendanceMonthsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "student_id", Type: field.TypeInt},
		{Name: "course_id", Type: field.TypeInt},
		{Name: "year", Type: field.TypeInt},
		{Name: "month", Type: field.TypeInt},
		{Name: "lessons_count", Type: field.TypeInt, Default: 0},
		{Name: "locked", Type: field.TypeBool, Default: false},
		{Name: "source", Type: field.TypeEnum, Enums: []string{"monthly", "daily_agg"}, Default: "monthly"},
	}
	// AttendanceMonthsTable holds the schema information for the "attendance_months" table.
	AttendanceMonthsTable = &schema.Table{
		Name:       "attendance_months",
		Columns:    AttendanceMonthsColumns,
		PrimaryKey: []*schema.Column{AttendanceMonthsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "attendancemonth_student_id_course_id_year_month",
				Unique:  true,
				Columns: []*schema.Column{AttendanceMonthsColumns[1], AttendanceMonthsColumns[2], AttendanceMonthsColumns[3], AttendanceMonthsColumns[4]},
			},
		},
	}
	// CoursesColumns holds the columns for the "courses" table.
	CoursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"group", "individual"}},
		{Name: "lesson_price", Type: field.TypeFloat64, Default: 0},
		{Name: "subscription_price", Type: field.TypeFloat64, Default: 0},
		{Name: "schedule_json", Type: field.TypeString, Default: ""},
		{Name: "is_active", Type: field.TypeBool, Default: true},
	}
	// CoursesTable holds the schema information for the "courses" table.
	CoursesTable = &schema.Table{
		Name:       "courses",
		Columns:    CoursesColumns,
		PrimaryKey: []*schema.Column{CoursesColumns[0]},
	}
	// EnrollmentsColumns holds the columns for the "enrollments" table.
	EnrollmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "billing_mode", Type: field.TypeEnum, Enums: []string{"subscription", "per_lesson"}},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "discount_pct", Type: field.TypeFloat64, Default: 0},
		{Name: "note", Type: field.TypeString, Default: ""},
		{Name: "course_id", Type: field.TypeInt},
		{Name: "student_id", Type: field.TypeInt},
	}
	// EnrollmentsTable holds the schema information for the "enrollments" table.
	EnrollmentsTable = &schema.Table{
		Name:       "enrollments",
		Columns:    EnrollmentsColumns,
		PrimaryKey: []*schema.Column{EnrollmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enrollments_courses_enrollments",
				Columns:    []*schema.Column{EnrollmentsColumns[6]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enrollments_students_enrollments",
				Columns:    []*schema.Column{EnrollmentsColumns[7]},
				RefColumns: []*schema.Column{StudentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enrollment_student_id_course_id",
				Unique:  true,
				Columns: []*schema.Column{EnrollmentsColumns[7], EnrollmentsColumns[6]},
			},
		},
	}
	// InvoicesColumns holds the columns for the "invoices" table.
	InvoicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "period_year", Type: field.TypeInt},
		{Name: "period_month", Type: field.TypeInt},
		{Name: "total_amount", Type: field.TypeFloat64, Default: 0},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"draft", "issued", "paid", "canceled"}, Default: "draft"},
		{Name: "number", Type: field.TypeString, Nullable: true},
		{Name: "student_id", Type: field.TypeInt},
	}
	// InvoicesTable holds the schema information for the "invoices" table.
	InvoicesTable = &schema.Table{
		Name:       "invoices",
		Columns:    InvoicesColumns,
		PrimaryKey: []*schema.Column{InvoicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "invoices_students_invoices",
				Columns:    []*schema.Column{InvoicesColumns[6]},
				RefColumns: []*schema.Column{StudentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "invoice_student_id_period_year_period_month",
				Unique:  true,
				Columns: []*schema.Column{InvoicesColumns[6], InvoicesColumns[1], InvoicesColumns[2]},
			},
		},
	}
	// InvoiceLinesColumns holds the columns for the "invoice_lines" table.
	InvoiceLinesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "description", Type: field.TypeString},
		{Name: "qty", Type: field.TypeInt},
		{Name: "unit_price", Type: field.TypeFloat64},
		{Name: "amount", Type: field.TypeFloat64},
		{Name: "enrollment_id", Type: field.TypeInt},
		{Name: "invoice_id", Type: field.TypeInt},
	}
	// InvoiceLinesTable holds the schema information for the "invoice_lines" table.
	InvoiceLinesTable = &schema.Table{
		Name:       "invoice_lines",
		Columns:    InvoiceLinesColumns,
		PrimaryKey: []*schema.Column{InvoiceLinesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "invoice_lines_enrollments_invoice_lines",
				Columns:    []*schema.Column{InvoiceLinesColumns[5]},
				RefColumns: []*schema.Column{EnrollmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "invoice_lines_invoices_lines",
				Columns:    []*schema.Column{InvoiceLinesColumns[6]},
				RefColumns: []*schema.Column{InvoicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PriceOverridesColumns holds the columns for the "price_overrides" table.
	PriceOverridesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "valid_from", Type: field.TypeTime},
		{Name: "valid_to", Type: field.TypeTime, Nullable: true},
		{Name: "lesson_price", Type: field.TypeFloat64, Nullable: true},
		{Name: "subscription_price", Type: field.TypeFloat64, Nullable: true},
		{Name: "enrollment_id", Type: field.TypeInt},
	}
	// PriceOverridesTable holds the schema information for the "price_overrides" table.
	PriceOverridesTable = &schema.Table{
		Name:       "price_overrides",
		Columns:    PriceOverridesColumns,
		PrimaryKey: []*schema.Column{PriceOverridesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "price_overrides_enrollments_price_overrides",
				Columns:    []*schema.Column{PriceOverridesColumns[5]},
				RefColumns: []*schema.Column{EnrollmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SettingsColumns holds the columns for the "settings" table.
	SettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "singleton_id", Type: field.TypeInt, Unique: true},
		{Name: "org_name", Type: field.TypeString, Default: ""},
		{Name: "address", Type: field.TypeString, Default: ""},
		{Name: "invoice_prefix", Type: field.TypeString, Default: "LS"},
		{Name: "next_seq", Type: field.TypeInt, Default: 1},
		{Name: "invoice_day_of_month", Type: field.TypeInt, Default: 1},
		{Name: "auto_issue", Type: field.TypeBool, Default: false},
		{Name: "currency", Type: field.TypeString, Default: "EUR"},
		{Name: "locale", Type: field.TypeString, Default: "ru-RU"},
	}
	// SettingsTable holds the schema information for the "settings" table.
	SettingsTable = &schema.Table{
		Name:       "settings",
		Columns:    SettingsColumns,
		PrimaryKey: []*schema.Column{SettingsColumns[0]},
	}
	// StudentsColumns holds the columns for the "students" table.
	StudentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "full_name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Default: ""},
		{Name: "email", Type: field.TypeString, Default: ""},
		{Name: "note", Type: field.TypeString, Default: ""},
		{Name: "is_active", Type: field.TypeBool, Default: true},
	}
	// StudentsTable holds the schema information for the "students" table.
	StudentsTable = &schema.Table{
		Name:       "students",
		Columns:    StudentsColumns,
		PrimaryKey: []*schema.Column{StudentsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AttendanceMonthsTable,
		CoursesTable,
		EnrollmentsTable,
		InvoicesTable,
		InvoiceLinesTable,
		PriceOverridesTable,
		SettingsTable,
		StudentsTable,
	}
)

func init() {
	EnrollmentsTable.ForeignKeys[0].RefTable = CoursesTable
	EnrollmentsTable.ForeignKeys[1].RefTable = StudentsTable
	InvoicesTable.ForeignKeys[0].RefTable = StudentsTable
	InvoiceLinesTable.ForeignKeys[0].RefTable = EnrollmentsTable
	InvoiceLinesTable.ForeignKeys[1].RefTable = InvoicesTable
	PriceOverridesTable.ForeignKeys[0].RefTable = EnrollmentsTable
}
